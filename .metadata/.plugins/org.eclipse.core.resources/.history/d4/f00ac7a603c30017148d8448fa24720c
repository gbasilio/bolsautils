package br.gustavo.importers;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;

import br.gustavo.db.StockDbUtils;

public class DadosHistoricosYahooFinanceImporter {
	
	private String[] ibrx100 = {"ABEV3.SA",
			"ALSC3.SA",
			"ALUP11.SA",
			"BBAS3.SA",
			"BBDC3.SA",
			"BBDC4.SA",
			"BBSE3.SA",
			"BEEF3.SA",
			"BPAC11.SA",
			"BRAP4.SA",
			"BRFS3.SA",
			"BRKM5.SA",
			"BRML3.SA",
			"BRPR3.SA",
			"BRSR6.SA",
			"BTOW3.SA",
			"BVMF3.SA",
			"CCRO3.SA",
			"CESP6.SA",
			"CIEL3.SA",
			"CMIG4.SA",
			"CPFE3.SA",
			"CPLE6.SA",
			"CSAN3.SA",
			"CSMG3.SA",
			"CSNA3.SA",
			"CVCB3.SA",
			"CYRE3.SA",
			"DTEX3.SA",
			"ECOR3.SA",
			"EGIE3.SA",
			"ELET3.SA",
			"ELET6.SA",
			"ELPL4.SA",
			"EMBR3.SA",
			"ENBR3.SA",
			"ENGI11.SA",
			"EQTL3.SA",
			"ESTC3.SA",
			"EZTC3.SA",
			"FIBR3.SA",
			"FLRY3.SA",
			"GFSA3.SA",
			"GGBR4.SA",
			"GOAU4.SA",
			"GOLL4.SA",
			"GRND3.SA",
			"HGTX3.SA",
			"HYPE3.SA",
			"IGTA3.SA",
			"ITSA4.SA",
			"ITUB4.SA",
			"JBSS3.SA",
			"KLBN11.SA",
			"KROT3.SA",
			"LAME3.SA",
			"LAME4.SA",
			"LIGT3.SA",
			"LINX3.SA",
			"LREN3.SA",
			"MDIA3.SA",
			"MGLU3.SA",
			"MPLU3.SA",
			"MRFG3.SA",
			"MRVE3.SA",
			"MULT3.SA",
			"MYPK3.SA",
			"NATU3.SA",
			"ODPV3.SA",
			"PCAR4.SA",
			"PETR3.SA",
			"PETR4.SA",
			"POMO4.SA",
			"PSSA3.SA",
			"QUAL3.SA",
			"RADL3.SA",
			"RAIL3.SA",
			"RAPT4.SA",
			"RENT3.SA",
			"SANB11.SA",
			"SAPR4.SA",
			"SBSP3.SA",
			"SEER3.SA",
			"SMLS3.SA",
			"SMTO3.SA",
			"SULA11.SA",
			"SUZB5.SA",
			"TAEE11.SA",
			"TIET11.SA",
			"TIMP3.SA",
			"TOTS3.SA",
			"TRPL4.SA",
			"UGPA3.SA",
			"USIM5.SA",
			"VALE3.SA",
			"VIVT4.SA",
			"VLID3.SA",
			"VVAR11.SA",
			"WEGE3.SA",
			"WIZS3.SA"};
	


	public static void main(String[] args) throws Exception {
		Date inicio = new Date();
		int numRegistrosAjustados = 0;
		
		Connection conn = StockDbUtils.getConnection();
		PreparedStatement update = conn.prepareStatement("UPDATE stock_quote " +
				"SET adjclose = ? WHERE codneg=? AND data=?");
		
		// ARQUIVOS COM DADOS INFOMONEY
//		File fileDir = new File("/home/gbasilio/Desktop/historicos_infomoney/ibrx50");
//		File fileDir = new File("/home/gbasilio/Desktop/historicos_infomoney/smll");
		File fileDir = new File("/home/gbasilio/Desktop/historicos_infomoney/infomoney_20130222");
		
//		File fileDir = new File("C:\\Users\\gbasilio\\Desktop\\historicos_infomoney\\ibrx50");
//		File fileDir = new File("C:\\Users\\gbasilio\\Desktop\\historicos_infomoney\\smll");
		
		File[] files = fileDir.listFiles();

		for (int i = 0; i < files.length; i++){
			if (files[i].isDirectory()){
				continue;
			}

			BufferedReader br = new BufferedReader(new FileReader(files[i]));
			String codneg = (files[i].getName().replace(".xls", "")).trim();
			Date data = null;
			Double fechamentoAjustado = null;

			String linha = br.readLine();
			String[] linhasAnteriores = new String[9];
			while (linha != null){
				if (linhasAnteriores[8] != null && linhasAnteriores[8].indexOf("<td>") > 0 &&
						linhasAnteriores[7] != null && linhasAnteriores[7].indexOf("<tr>") > 0){
					SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
					data = sdf.parse(linha.trim());
				}

				if (linhasAnteriores[8] != null && linhasAnteriores[8].indexOf("<td>") > 0 &&
						linhasAnteriores[7] != null && linhasAnteriores[7].indexOf("</td>") > 0 &&
						linhasAnteriores[5] != null && linhasAnteriores[5].indexOf("<td>") > 0 &&
						linhasAnteriores[4] != null && linhasAnteriores[4].indexOf("</td>") > 0 &&
						linhasAnteriores[2] != null && linhasAnteriores[2].indexOf("<td>") > 0 &&
						linhasAnteriores[1] != null && linhasAnteriores[1].indexOf("<tr>") > 0){
					if (linha.indexOf("n/d") < 0){
						fechamentoAjustado = new Double(linha.trim().replace(',', '.'));
					}
					else{
						fechamentoAjustado = -1d;	
					}
				}

				linhasAnteriores[0] = linhasAnteriores[1];
				linhasAnteriores[1] = linhasAnteriores[2];
				linhasAnteriores[2] = linhasAnteriores[3];
				linhasAnteriores[3] = linhasAnteriores[4];
				linhasAnteriores[4] = linhasAnteriores[5];
				linhasAnteriores[5] = linhasAnteriores[6];
				linhasAnteriores[6] = linhasAnteriores[7];
				linhasAnteriores[7] = linhasAnteriores[8];
				linhasAnteriores[8] = linha;

				linha = br.readLine();

				if (data != null && fechamentoAjustado != null){
					System.out.println(codneg + " / Data = " + data + " / fechamentoAjustado = " + fechamentoAjustado);

					update.setDouble(1, fechamentoAjustado);
					update.setString(2, codneg);
					update.setDate(3, new java.sql.Date(data.getTime()));
					update.execute();
					numRegistrosAjustados++;
					
					data = null;
					fechamentoAjustado = null;
				}
			}
			
			System.out.println(numRegistrosAjustados + " registros ajustados em " + ((new Date().getTime() - inicio.getTime()) / 1000) + " segundos.");
		}

	}

}
